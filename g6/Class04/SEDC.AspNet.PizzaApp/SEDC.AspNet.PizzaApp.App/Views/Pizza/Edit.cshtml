@model PizzaVM

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

@if (ViewBag.Error != null)
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.Error
    </div>
}

<div class="row">
    <div class="col-md-5">
        <form asp-route="EditPizza" method="post">
            <h3>Pizza info: </h3>
            @*<div hidden class="form-group">
                <label asp-for="Id"></label>
                <input class="form-control" asp-for="Id" value="@Model.Id" disabled />
            </div>*@
            <div class="form-group">
                <label asp-for="Name"></label>
                <input class="form-control" asp-for="Name" value="@Model.Name" />
                <span asp-validation-for="Name"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price"></label>
                <input class="form-control" asp-for="Price" value="@Model.Price" />
                <span asp-validation-for="Price"></span>
            </div>
            <div class="form-group">
                <label asp-for="Size"></label>
                <select class="form-control" asp-for="Size" asp-items="Html.GetEnumSelectList<PizzaSize>()"></select>
            </div>
            <div class="form-group">
                <button class="btn btn-block" type="submit">Edit Pizza</button>
            </div>
        </form>
    </div>
</div>


@*<div class="row">
        <div class="col-md-5">
            @using (Html.BeginForm())
            {
                <h3>Pizza info: </h3>
                <div class="form-group">
                    @Html.LabelFor(x => x.Id)
                    @Html.HiddenFor(x => x.Id, new { @class = "form-control", disabled = true })
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Name)
                    @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Name)
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Price)
                    @Html.TextBoxFor(x => x.Price, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Price)
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Size)
                    @Html.DropDownListFor(x => x.Size, Html.GetEnumSelectList<PizzaSize>(), new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Size)
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-block">Edit pizza</button>
                </div>
            }
        </div>
    </div>*@